// Language detection and utility functions

export const detectLanguage = (text) => {
  if (!text || typeof text !== 'string') return 'english';
  
  // Hindi detection based on Devanagari script
  const hindiRegex = /[\u0900-\u097F]/;
  return hindiRegex.test(text) ? 'hindi' : 'english';
};

export const getLanguageSpecificGreeting = (userName, language = 'english') => {
  if (language === 'hindi') {
    return `‡§®‡§Æ‡§∏‡•ç‡§§‡•á ${userName || '‡§µ‡§π‡§æ‡§Ç'}! üëã ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∞‡§ø‡§Ø‡§≤ ‡§è‡§∏‡•ç‡§ü‡•á‡§ü CRM ‡§ï‡•á ‡§≤‡§ø‡§è AI ‡§Ö‡§∏‡§ø‡§∏‡•ç‡§ü‡•á‡§Ç‡§ü ‡§π‡•Ç‡§Ç‡•§`;
  }
  return `Hello ${userName || 'there'}! üëã I'm your AI assistant for real estate CRM.`;
};

export const getLanguageSpecificCommands = (language = 'english') => {
  if (language === 'hindi') {
    return {
      search: "‡§™‡•ç‡§∞‡•â‡§™‡§∞‡•ç‡§ü‡•Ä ‡§ñ‡•ã‡§ú‡•á‡§Ç",
      analytics: "‡§è‡§®‡§æ‡§≤‡§ø‡§ü‡§ø‡§ï‡•ç‡§∏ ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç", 
      leads: "‡§≤‡•Ä‡§° ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç",
      help: "‡§Æ‡§¶‡§¶ ‡§ö‡§æ‡§π‡§ø‡§è"
    };
  }
  return {
    search: "Search properties",
    analytics: "Show analytics",
    leads: "Show leads", 
    help: "Need help"
  };
};

export const translateCommonTerms = (term, language = 'english') => {
  const translations = {
    'property': { hindi: '‡§™‡•ç‡§∞‡•â‡§™‡§∞‡•ç‡§ü‡•Ä', english: 'property' },
    'lead': { hindi: '‡§≤‡•Ä‡§°', english: 'lead' },
    'analytics': { hindi: '‡§è‡§®‡§æ‡§≤‡§ø‡§ü‡§ø‡§ï‡•ç‡§∏', english: 'analytics' },
    'search': { hindi: '‡§ñ‡•ã‡§ú', english: 'search' },
    'report': { hindi: '‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü', english: 'report' },
    'price': { hindi: '‡§ï‡•Ä‡§Æ‡§§', english: 'price' },
    'location': { hindi: '‡§∏‡•ç‡§•‡§æ‡§®', english: 'location' }
  };
  
  return translations[term.toLowerCase()]?.[language] || term;
};
